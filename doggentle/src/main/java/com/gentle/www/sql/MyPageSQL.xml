<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
   PUBLIC "-//mybatis.org//DYD Mapper 3.0//EN"
         "http://mybatis.org/dyd/mybatis-3-mapper.dtd">
<mapper namespace="mpSQL"> 
   <select id="getMyInfo" resultType="mVO" parameterType="string">
      SELECT
           pno, id, mail, isshow, sumpoint spoint
        FROM
           member m, point p, (SELECT MAX(pno) pmax FROM point p, member m WHERE id = #{id} AND p.mno = m.mno )
       WHERE
           pmax = pno
           AND p.mno = m.mno
   </select>
   <select id="getMember" resultType="mVO" parameterType="string">
      SELECT
          mail, pw, bdate, jdate 
      FROM
          member
      WHERE
          id = #{id}
   </select>
   <select id="getCartList" resultType="gVO" parameterType="string">
    SELECT
    	gno, gname, price, savename, dir, cnt
    FROM
      (
	      SELECT
	         rownum rno, gno, gname, price, savename, dir, cnt
	      FROM(
	          SELECT
	              g.gno gno, g.gname gname, g.price price, savename, dir, quantity cnt
	          FROM
	              cart c, member m, goods g, img i
	          WHERE
	              m.id = #{id}
	              AND m.mno = c.mno
	              AND c.gno = g.gno
	              AND g.ino = i.ino
	              AND c.isshow = 'Y'
	          ORDER BY cno desc
	      	)
      )
      WHERE
      	rno between 1 and 3
   </select>
   
   <select id="getTransacList" resultType="gVO" parameterType="string">
      SELECT
		    tno gno, price, cnt, to_char(tdate, 'yy/mm/dd') sdate, adrs, gname, dir, savename
		FROM
		    (
		    SELECT
		        rownum rno, s.tno tno, s.price price, cnt, tdate, adrs, gname, dir, savename  
		    FROM
		        (
		        SELECT 
		            s.upno tno, sum(s.price) price, count(*)-1 cnt
		        FROM
		            (
		                SELECT
		                    nvl(upno, tno) upno, (quantity * price) price
		                FROM
		                    transaction t, member m, goods g
		                WHERE
		                    id = #{id}
		                    AND m.mno = t.mno
		                    AND t.gno = g.gno
		            )s
		        group by s.upno
		        )s, transaction t, address a, goods g, img i
		    WHERE
		        s.tno = t.tno
		        AND t.adno = a.adno
		        AND t.gno = g.gno
		        AND g.ino = i.ino
		        order by tdate desc
		    )
		WHERE 
		    rno between 1 and 3
   </select>
   
   <select id="getMemberCheck" resultType="int" parameterType="mVO">
      SELECT
         COUNT(*)
      FROM
         MEMBER
      WHERE
         id = #{id}
         AND pw = #{pw}
   </select>
   <update id="changePw" parameterType="mVO">
      UPDATE 
         member
      SET
         pw = #{spw}
      WHERE
         id = #{id}
         AND NOT pw = #{spw}
   </update> 
   
   <select id="myAddressList" resultType="adVO" parameterType="string">
    SELECT
	    adno, who, pno, adrs, contact
	FROM
	    address a, member m
	WHERE
	    id = #{id}
	    AND a.mno = m.mno
	    AND isuse = 'Y'
   </select>
   
   
   <select id ="getPointListCount" resultType="int" parameterType="myVO">
      select
          count(*)
      from
          point p, member m, code c
      where
          id = #{id}
          AND m.mno = p.mno
      <if test="startdate neq null and enddate neq null and startdate neq '' and enddate neq ''">
          AND odate between #{startdate} and #{enddate}
      </if>
          AND p.cno = c.cno
      <if test="supno neq 0 ">
          AND c.upcno = #{supno}
      </if>
   </select>
    
   <select id="getPointList" resultType="myVO" parameterType="Hashmap">
     	SELECT
		    upno, body, odate, pvalue
		FROM
		(
		    SELECT
		        rownum rno, upno, body, odate, pvalue
		    FROM
		    (
		        SELECT	
		            c.upcno upno, body, to_char(odate, 'yy-mm-dd') odate, pvalue
		        FROM
		            point p, code c, member m
		        WHERE
		            id = #{myVO.id}
		            AND m.mno = p.mno
		            AND p.cno = c.cno
		    <if test="myVO.startdate neq null and myVO.enddate neq null and myVO.startdate neq '' and myVO.enddate neq ''">
		            AND odate between #{myVO.startdate} and #{myVO.enddate}
		    </if>
		    <if test="myVO.supno neq 0">
		             AND upcno = #{myVO.supno}
		    </if>
		        ORDER BY pno desc
		    )
		)
		WHERE
		    rno between #{page.startCont} and #{page.endCont} 
   </select>
   
   <select id="getAttend" resultType="integer" parameterType="calVO">
        SELECT 
		    to_char(adate, 'dd')
		FROM
		    ATTEND a, MEMBER m
		WHERE
		    id = #{id}
		    AND m.mno = a.mno
		    AND to_char(adate, 'yyyyfmmm') like #{year}||#{month}
		ORDER BY adate asc
   </select>
   
   <insert id="addAttend" parameterType="myVO">
   		<selectKey keyProperty="ano" resultType="int" order="BEFORE">
   			SELECT NVL(MAX(ano) + 1, 100001) FROM attend
   		</selectKey>
   		INSERT INTO attend(ano, mno)
		VALUES(#{ano}, (SELECT MNO FROM MEMBER WHERE id=#{id}))
   </insert>
   <insert id="occurpoint" parameterType="myVO">
   		<selectKey keyProperty="pno,mno,spoint" resultType="myVO" order="BEFORE">
   			SELECT
			    (SELECT MAX(pno)+1 FROM POINT) pno, s.mno mno, s.sumpoint spoint
			FROM
			    point p,
			    (
			        SELECT 
			            (sumpoint
		            <if test="supno &gt; 100 and supno &lt; 200">
			             + 
		            </if>
		            <if test="supno &gt; 200 and supno &lt; 300">
			             - 
		            </if>
			             #{pvalue}
			             ) sumpoint, mno, pno
			        FROM
			        (
			            SELECT 
			                MAX(pno)spno 
			            FROM 
			                point p, member m
			            WHERE
			                id = #{id}
			                AND m.mno = p.mno
			        ), point
			        WHERE
			            spno = pno
			    )s
			WHERE
			    p.pno = s.pno
   		</selectKey>
   		INSERT INTO 
   			point(pno, mno, cno, pvalue, sumpoint)
   		VALUES(
   			#{pno}, #{mno}, #{supno}, #{pvalue}, #{spoint}
   		)
   </insert>
   
	<select id="qnaList" resultType="qVO" parameterType="qVO">
      SELECT
          qno, g.gname name, title, i.gno gno, qdate
      FROM
          (
          SELECT
              qno, id, title, gno, qdate
          FROM
              qna q, member m
          WHERE
              q.mno = m.mno
              and id = #{id}
          ) i, goods g
      WHERE
          i.gno = g.gno
    </select>
</mapper> 